load("//bazel:api.bzl", "modular_pybind_extension")

package(default_visibility = ["//visibility:public"])

filegroup(
    name = "modular_py_srcs",
    srcs = glob(["**/*.py"]) + [
        "//SDK/lib/GraphAPI/python/max/graph/mlir:__init__.py",
    ],
)

filegroup(
    name = "py_srcs",
    srcs = [
        ":modular_py_srcs",
        "//SDK/lib/GraphAPI/python/max/graph/mlir:py_srcs",
    ],
)

# max.graph.core C extension module.
modular_pybind_extension(
    name = "core",
    srcs = ["//SDK/lib/GraphAPI/python:cpp_bindings_srcs"],
    # Add max_graph_editable/.libs to RPATH so that the C extension can load
    # dependent shared libs from this package structure:
    # max/
    #   graph/
    #     core.cpython-aarch64.so
    # .libs/
    #   libmodular-framework-common.so
    #   libMSupportGlobals.so
    #   and so on.
    linkopts = select({
        "@bazel_tools//src/conditions:darwin": [
            "-Wl,-rpath,@loader_path/../../.libs",
        ],
        "//conditions:default": [
            "-Wl,-rpath,$ORIGIN/../../.libs",
        ],
    }),
    pybind_data = [
        "//SDK/lib/GraphAPI/python/max/graph/mlir:_mlir_libs/_mlir",
    ],
    deps = [
        "//GenericML:SupportGlobals",
        "//GenericML:modular-framework-common",
    ],
)
