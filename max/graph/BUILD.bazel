load("//bazel:api.bzl", "modular_pybind_extension")

package(default_visibility = ["//visibility:public"])

filegroup(
    name = "graph",
    srcs = glob([
        "**/*.py",
        "**/*.pyi",
    ]),
)

# max.graph.core C extension module.
modular_pybind_extension(
    name = "core",
    srcs = ["//SDK/lib/GraphAPI/python:cpp_bindings_srcs"],
    # Add max_graph_editable/.libs to RPATH so that the C extension can load
    # dependent shared libs from this package structure:
    # max/
    #   graph/
    #     core.cpython-aarch64.so
    # .libs/
    #   libmodular-framework-common.so
    #   libMSupportGlobals.so
    #   and so on.
    linkopts = select({
        "@bazel_tools//src/conditions:darwin": [
            "-Wl,-rpath,@loader_path/../../.libs",
        ],
        "//conditions:default": [
            "-Wl,-rpath,$ORIGIN/../../.libs",
        ],
    }),
    local_defines = [
        # Set definition used in Interop.h to prefix the MLIR package.
        "MLIR_PYTHON_PACKAGE_PREFIX=max._mlir.",
    ],
    pybind_data = ["//SDK/lib/GraphAPI/python/max/_mlir/_mlir_libs:_mlir"],
    pybind_deps = ["//SDK:GraphPython"],
    deps = [
        "//GenericML:modular-framework-common",
        "//ModularFramework/tools/mof",
    ],
)
